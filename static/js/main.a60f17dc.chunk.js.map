{"version":3,"sources":["context.js","Components/contacts/Contact.js","Components/contacts/Contacts.js","Components/Layout/TextInputGroup.js","Components/contacts/AddContact.js","Components/contacts/EditContact.js","Components/Layout/Header.js","Components/pages/About.js","Components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","async","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","classname","EditContact","updContact","match","params","put","Header","branding","href","App","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a60f17dc.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state,action) => {\r\n    switch (action.type){\r\n        case 'DELETE_CONTACT':\r\n            return{\r\n                ...state, \r\n                contacts:state.contacts.filter(contact => \r\n                contact.id != action.payload)\r\n            };\r\n            case 'ADD_CONTACT':\r\n            return{\r\n                ...state, \r\n                contacts: [action.payload, \r\n                    ...state.contacts]\r\n            };\r\n            case 'UPDATE_CONTACT':\r\n                return {\r\n                    ...state,\r\n                    contacts: state.contacts.map(contact =>\r\n                        contact.id === action.payload.id ? (contact\r\n                            = action.payload): contact)\r\n                }\r\n    default:\r\n        return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch : action => \r\n            this.setState(state => reducer(state,action))\r\n        \r\n    };\r\n    async componentDidMount(){\r\n        const res = await axios.get\r\n        ('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({contacts: res.data});   \r\n    }\r\n    render(){\r\n        return (\r\n            <Context.Provider value = {this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>    \r\n        )\r\n    }\r\n    }\r\n    export const Consumer = Context.Consumer;\r\n\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer} from '../../context';\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id,dispatch) => {\r\n    try{\r\n    await axios.delete\r\n    (`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({type:'DELETE_CONTACT',payload:id});\r\n    }catch(e){\r\n      dispatch({type:'DELETE_CONTACT',payload:id});\r\n    } \r\n  };\r\n    render() {\r\n        const {id,name, email, phone} = this.props.contact;\r\n        const {showContactInfo} = this.state;\r\n        return (\r\n          <Consumer>\r\n            {value => {\r\n              const {dispatch} = value;\r\n              return (\r\n                <div className = \"card card-body mb-3\">\r\n              <h4>\r\n                {name}{' '} \r\n                <i \r\n                onClick= {() =>this.setState({showContactInfo:\r\n                  !this.state.showContactInfo})}\r\n                className =\"fas fa-sort-down\" \r\n                style={{cursor:'pointer'}}\r\n                />\r\n                <i className = \"fas fa-times\" \r\n                style ={\r\n                  {cursor:'pointer', float:'right',\r\n                color:'red'}\r\n                }\r\n                onClick={this.onDeleteClick.bind(this,id,dispatch)\r\n                }\r\n                />\r\n                <Link to ={`contact/edit/${id}`} >\r\n                <i className = \"fas fa-pencil-alt\" \r\n                style ={{\r\n                  cursor: 'pointer',\r\n                  float:'right',\r\n                  color:'black',\r\n                  marginRight: '1rem'\r\n                  }}/> \r\n                </Link>\r\n              \r\n          \r\n              </h4>\r\n              {showContactInfo ? \r\n              (<ul className = \"list-group\">\r\n                <li className =\"list-group-item\">Email:{email}</li>\r\n                <li className = \"list-group-item\">Phone: {phone}</li>\r\n              </ul>) : null }\r\n                \r\n            </div>\r\n                \r\n              )\r\n            }}\r\n          </Consumer>\r\n        );\r\n    }\r\n}\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  \r\n}\r\nexport default Contact;\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context'\r\n\r\nclass Contacts extends Component {\r\n    \r\n\r\n       \r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {contacts} = value;\r\n                    return(\r\n                        <React.Fragment>\r\n                            <h1 className = \"display-4 mb-2\">\r\n                                <span className = \"text-danger\"> Conatct </span>List\r\n                            </h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact\r\n                                key = {contact.id}\r\n                                 contact = {contact} \r\n                                \r\n                                />\r\n                                ))}\r\n                        </React.Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        )\r\n        \r\n    }\r\n}\r\nexport default Contacts;\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className = \"form-group\">\r\n                            <label htmlFor={name}>{label}</label>\r\n                            <input type={type}\r\n                            name={name}\r\n                            className={classnames('form-control form-control-lg',\r\n                            {'is-invalid':error})}\r\n                            placeholder ={placeholder}\r\n                            value={value}\r\n                            onChange = {onChange}\r\n                            />\r\n                            {error &&<div className = \"invalid-feedback\">{error}</div>}\r\n                            \r\n                        </div>\r\n    )\r\n}\r\nTextInputGroup.propTypes = {\r\n    label:PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\nTextInputGroup.defaultProps = {\r\n    type:'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../Layout/TextInputGroup';\r\n\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n    onSubmit = async (dispatch,e) => {\r\n        e.preventDefault();\r\n        const {name, email,phone} = this.state;\r\n        if(name === ''){\r\n            this.setState({errors:{name:'Name is Required'}});\r\n            return;\r\n        }\r\n\r\n        if(email === ''){\r\n            this.setState({errors:{email: 'Email is required'}});\r\n            return;\r\n        }\r\n\r\n        if(phone === ''){\r\n            this.setState({errors:{phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n\r\n\r\n        const newContact = {\r\n           \r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users',newContact)\r\n        dispatch({type:'ADD_CONTACT',payload:res.data});\r\n\r\n\r\n        \r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        });\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value});\r\n    \r\n\r\n\r\n    render() {\r\n        const {name,email,phone,errors} = this.state;\r\n\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const{dispatch} = value;\r\n                    return(\r\n                        <div className = \"card mb-3\">\r\n                <div className=\"card-header\">Add Contact\r\n                </div>\r\n                <div className = \"card-body\">\r\n                    <form onSubmit={this.onSubmit.bind(\r\n                        this,dispatch\r\n                    )}>\r\n                        \r\n                        <TextInputGroup  \r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            placeholder=\"Enter Name\"\r\n                            value={name}\r\n                            onChange={this.onChange}\r\n                            error = {errors.name}\r\n                            \r\n                            \r\n                        />\r\n                        <TextInputGroup  \r\n                            label=\"email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            placeholder=\"Enter Email\"\r\n                            value={email}\r\n                            onChange={this.onChange}\r\n                            error={errors.email}\r\n                        />\r\n                        <TextInputGroup  \r\n                            label=\"Phone\"\r\n                            name=\"phone\"\r\n                            placeholder=\"Enter Phone\"\r\n                            value={phone}\r\n                            onChange={this.onChange}\r\n                            error = {errors.phone}\r\n                        />\r\n\r\n                        \r\n                        <input type=\"submit\" \r\n                        value =\"Add Contact\"\r\n                        classname = \"btn btn-light btn-block\"\r\n                        />\r\n                    </form>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n       \r\n    }\r\n}\r\nexport default AddContact;\r\n","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../Layout/TextInputGroup';\r\n\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMount(){\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get\r\n        (`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone:contact.phone\r\n        });\r\n\r\n    }\r\n\r\n    onSubmit = async (dispatch,e) => {\r\n        e.preventDefault();\r\n        const {name, email,phone} = this.state;\r\n        if(name === ''){\r\n            this.setState({errors:{name:'Name is Required'}});\r\n            return;\r\n        }\r\n\r\n        if(email === ''){\r\n            this.setState({errors:{email: 'Email is required'}});\r\n            return;\r\n        }\r\n\r\n        if(phone === ''){\r\n            this.setState({errors:{phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n\r\n        const updContact ={\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.put\r\n        (`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n\r\n        dispatch({type:'UPDATE_CONTACT', payload:\r\n        res.data});\r\n\r\n        \r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        });\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value});\r\n    \r\n\r\n\r\n    render() {\r\n        const {name,email,phone,errors} = this.state;\r\n\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const{dispatch} = value;\r\n                    return(\r\n                        <div className = \"card mb-3\">\r\n                <div className=\"card-header\">Edit Contact\r\n                </div>\r\n                <div className = \"card-body\">\r\n                    <form onSubmit={this.onSubmit.bind(\r\n                        this,dispatch\r\n                    )}>\r\n                        \r\n                        <TextInputGroup  \r\n                            label=\"Name\"\r\n                            name=\"name\"\r\n                            placeholder=\"Enter Name\"\r\n                            value={name}\r\n                            onChange={this.onChange}\r\n                            error = {errors.name}\r\n                            \r\n                            \r\n                        />\r\n                        <TextInputGroup  \r\n                            label=\"email\"\r\n                            name=\"email\"\r\n                            type=\"email\"\r\n                            placeholder=\"Enter Email\"\r\n                            value={email}\r\n                            onChange={this.onChange}\r\n                            error={errors.email}\r\n                        />\r\n                        <TextInputGroup  \r\n                            label=\"Phone\"\r\n                            name=\"phone\"\r\n                            placeholder=\"Enter Phone\"\r\n                            value={phone}\r\n                            onChange={this.onChange}\r\n                            error = {errors.phone}\r\n                        />\r\n\r\n                        \r\n                        <input type=\"submit\" \r\n                        value =\"Update Contact\"\r\n                        classname = \"btn btn-light btn-block\"\r\n                        />\r\n                    </form>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n       \r\n    }\r\n}\r\nexport default EditContact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst Header = (props) => {\r\n    const {branding} = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm \r\n            navbar-dark bg-danger mb-3 py-0\" >\r\n            <div className = \"container\">\r\n                <a href =\"/\" className = \"navbar-brand\">\r\n                    {branding}\r\n                </a>\r\n                <div>\r\n                    <ul className = \"navbar-nav mr-auto\"> \r\n                        <li className = \"nav-item\">\r\n                            <Link to = \"/\" className = \"nav-link\">\r\n                                <i className = \"fas fa-home\"></i>\r\n                                Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className = \"nav-item\">\r\n                            <Link to = \"/contact/add\" className = \"nav-link\">\r\n                            <i className = \"fas fa-plus\"></i>Add\r\n                            </Link>\r\n                        </li>\r\n                        <li className = \"nav-item\">\r\n                            <Link to = \"/about\" className = \"nav-link\">\r\n                            <i className = \"fas fa-question\"></i> About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\nHeader.propTypes ={\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default function() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact\r\n            Manager</h1>\r\n            <p className=\"lead\">Simple App to Manage Contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">\r\n                <span className =\"text-danger\">404</span>\r\n                Page Not Found\r\n            </h1>\r\n            <p className =\"lead\">Sorry!!\r\n            That Page Doesn't Exist</p>\r\n        </div>\r\n    )\r\n}\r\n","import React,{Component} from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\nimport Contacts from './Components/contacts/Contacts';\nimport AddContact from './Components/contacts/AddContact';\nimport EditContact from './Components/contacts/EditContact';\nimport Header from './Components/Layout/Header';\nimport About from './Components/pages/About';\nimport {Provider} from './context'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport NotFound from './Components/pages/NotFound'\n\n\nclass App extends Component {\n  render(){\n    return(\n    <Provider>\n      <Router>\n      <div className=\"App\">\n        <Header branding = \"Contact Manager\"/>\n        <div className = \"container\">\n          <Switch>\n            <Route exact path=\"/\" component=\n            {Contacts} />\n            <Route exact path=\"/contact/add\" component=\n            {AddContact} />\n            <Route exact path=\"/contact/edit/:id\" component=\n            {EditContact} />\n            <Route exact path=\"/about\" component=\n            {About} />\n            <Route component = {NotFound} />\n          </Switch>\n        </div>\n      </div>\n      </Router>\n    </Provider>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}